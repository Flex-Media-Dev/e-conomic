<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dynamicweb.DataIntegration.Providers.SqlProvider</name>
    </assembly>
    <members>
        <member name="T:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter">
            <summary>
            Sql destination writer
            </summary>
        </member>
        <member name="P:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.RowsToWriteCount">
            <summary>
            Return rows to write count
            </summary>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.#ctor(Dynamicweb.DataIntegration.Integration.Mapping,System.Data.SqlClient.SqlConnection,System.Boolean,Dynamicweb.Logging.ILogger,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlDestinationWriter class.
            </summary>        
            <param name="mapping">Mapping</param>
            <param name="connection">Connection</param>
            <param name="removeMissingAfterImport">Delete rows not present in the import</param>
            <param name="logger">Logger instance</param>
            <param name="tempTablePrefix">Temporary table prefix</param>
            <param name="discardDuplicates">Discard duplicates</param>
            <param name="removeMissingAfterImportDestinationTablesOnly">Remove missing rows after import in the destination tables only</param>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.#ctor(Dynamicweb.DataIntegration.Integration.Mapping,System.Data.SqlClient.SqlConnection,System.Boolean,Dynamicweb.Logging.ILogger,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlDestinationWriter class.
            </summary>        
            <param name="mapping">Mapping</param>
            <param name="connection">Connection</param>
            <param name="removeMissingAfterImport">Delete rows not present in the import</param>
            <param name="logger">Logger instance</param>
            <param name="tempTablePrefix">Temporary table prefix</param>
            <param name="discardDuplicates">Discard duplicates</param>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.#ctor(Dynamicweb.DataIntegration.Integration.Mapping,System.Data.SqlClient.SqlConnection,System.Boolean,Dynamicweb.Logging.ILogger,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlDestinationWriter class.
            </summary>
            <param name="mapping">Mapping</param>
            <param name="connection">Connection</param>
            <param name="removeMissingAfterImport">Delete rows not present in the import</param>
            <param name="logger">Logger instance</param>
            <param name="discardDuplicates">Discard duplicates</param>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.#ctor(Dynamicweb.DataIntegration.Integration.Mapping,System.Data.SqlClient.SqlCommand,System.Boolean,Dynamicweb.Logging.ILogger,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlDestinationWriter class.
            </summary>
            <param name="mapping">Mapping</param>
            <param name="mockSqlCommand">Mock SqlCommand</param>
            <param name="removeMissingAfterImport">Delete rows not present in the import</param>
            <param name="logger">Logger instance</param>
            <param name="tempTablePrefix">Temporary table prefix</param>
            <param name="discardDuplicates">Discard duplicates</param>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.Write(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Writes the specified row.
            </summary>
            <param name="Row">The row to be written.</param>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.DeleteExcessFromMainTable(System.String)">
            <summary>
            Deletes rows not present in the import source
            </summary>
            <param name="extraConditions">Where condition to filter data for deletion</param>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.DeleteRowsFromMainTable(System.Boolean,Dynamicweb.DataIntegration.Integration.Mapping,System.String,System.Data.SqlClient.SqlCommand,System.String)">
            <summary>
            Deletes rows present/not present in the import source
            </summary>
            <param name="deleteExistingRows">If true deletes existing rows present in the import source. If false deletes excess rows not present in the import source.</param>
            <param name="mapping">Mapping</param>
            <param name="extraConditions">Where condition to filter data for deletion</param>
            <param name="sqlCommand">Command instance to execute the sql delete statement</param>
            <param name="tempTablePrefix">Temporary table prefix</param>
            <param name="languageID">the language to layer to delete from</param>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.DeleteExcessFromMainTable(Dynamicweb.DataIntegration.Integration.Mapping,System.String,System.Data.SqlClient.SqlCommand,System.String)">
            <summary>
            Deletes rows not present in the import source
            </summary>
            <param name="mapping">Mapping</param>
            <param name="extraConditions">Where condition to filter data for deletion</param>
            <param name="sqlCommand">Command instance to execute the sql delete statement</param>
            <param name="tempTablePrefix">Temporary table prefix</param>
            <param name="languageID">the language to layer to delete from</param>        
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.DeleteExcessFromMainTable(Dynamicweb.DataIntegration.Integration.Mapping,System.String,System.Data.SqlClient.SqlCommand,System.String,System.Boolean)">
            <summary>
            Deletes rows not present in the import source
            </summary>
            <param name="mapping">Mapping</param>
            <param name="extraConditions">Where condition to filter data for deletion</param>
            <param name="sqlCommand">Command instance to execute the sql delete statement</param>
            <param name="tempTablePrefix">Temporary table prefix</param>
            <param name="languageID">the language to layer to delete from</param>
            <param name="removeMissingAfterImportDestinationTablesOnly">Remove missing rows after import in the destination tables only</param>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.DeleteExistingFromMainTable(Dynamicweb.DataIntegration.Integration.Mapping,System.String,System.Data.SqlClient.SqlCommand,System.String)">
            <summary>
            Deletes existing rows present in the import source
            </summary>
            <param name="mapping">Mapping</param>
            <param name="extraConditions">Where condition to filter data for deletion</param>
            <param name="sqlCommand">Command instance to execute the sql delete statement</param>
            <param name="tempTablePrefix">Temporary table prefix</param>
            <param name="languageID">the language to layer to delete from</param>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.FinishWriting">
            <summary>
            Write data using SQL bulk copier
            </summary>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.Close">
            <summary>
            Close writer
            </summary>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.MoveDataToMainTable(System.Data.SqlClient.SqlTransaction)">
            <summary>
            Move data to main table
            </summary>
            <param name="sqlTransaction">Transaction</param>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.MoveDataToMainTable(System.Data.SqlClient.SqlTransaction,System.Boolean)">
            <summary>
            Move data to main table
            </summary>
            <param name="sqlTransaction">Transaction</param>
            <param name="updateOnly">Update only</param>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlDestinationWriter.MoveDataToMainTable(System.Data.SqlClient.SqlTransaction,System.Boolean,System.Boolean)">
            <summary>
            Move data to main table
            </summary>
            <param name="sqlTransaction">Transaction</param>
            <param name="updateOnly">Update only</param>
            <param name="insertOnly">Insert only</param>
        </member>
        <member name="M:Dynamicweb.DataIntegration.Providers.SqlProvider.SqlSourceReader.GetNext">
            <summary>
            base implementation, 
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
